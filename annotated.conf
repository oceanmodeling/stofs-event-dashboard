# NOTE - THIS CONFIGURATION FILE IS INTENDED AS A GUIDE AND 
# WILL NOT ACTUALLY WORK!!! CONFIG FILES SHOULD BE FORMATTED AS 
# JSON FILES, WHICH DON'T ALLOW IN-LINE COMMENTS. 
# ANY LINE IN THIS FILE THAT STARTS WITH A `#` IS JUST FOR 
# ILLUSTRATION/DOCUMENTATION PURPOSES.

{
    # This line doesn't do anything:
    "file_description":"Define event details and data processing requirements.",

    # This section describes the event:
    "event":{

        # The name and year of the file will be used in directory names,
        # and in the dashboard itself.
        "name":"test",
        "year":2025,

        # This flag says whether this event is a National
        # Hurricane Center named storm, in which case we 
        # will attempt to pull information from the NHC database.
        # Value must be `true` or `false` (without quotes).
        "nhc_named_storm":false,

        # The following 3 parameters are only used if `nhc_named_storm` 
        # is set to `true`:
        # The NHC's name for the storm if it differs from 
        # `name` above. If the NHC name is the same as `name`, set
        # this value to `null` (without quotes).
        "nhc_name":null,
        # The track type in the NHC database. This will usually be 
        # "BEST" (in quotes) but might occasionally be "FCST". 
        "nhc_track_type":"BEST",
        # When multiple storm forecast tracks are available, this
        # specifies which one to use. To use the most recent available,
        # set this to `null` (without quotes).
        "nhc_track_datetime":null, 

        # The following 3 parameters must be given if `nhc_named_storm` is
        # set to `false`, and can optionally be given if `nhc_named_storm` 
        # is set to `true`, in which case they override the values that 
        # would be derived from the NHC data.
        "user_start_datetime":"2025-03-03T12:00:00",
        "user_end_datetime":"2025-03-04T12:00:00",
        "user_bounding_box":[-88.4, 30, -87.5, 31],

        # The following 2 parameters (and any beginning with an underscore)
        # are intended as metadata and will be ignored by the code. They
        # are just there to remind users of the formats to use.
        "_datetime_format":"yyyy-mm-ddThh:mm:ss (ISO 8601)",
        "_bounding_box_format":"List [lon_min, lat_min, lon_max, lat_max]"
    },

    # This section defines which stations to select data for.
    "stations":{
        # The polygon to select stations within. Must be one of the options
        # given in `_bounds_options`. Value `box` means either the user
        # defined bounding box, or the lat-lon box that contains the NHC
        # wind swaths. Values 34, 50, and 64 refer to the NHC-defined wind
        # swath polygons.
        "bounds":"box", 
        "_bounds_options":"box | 34 | 50 | 64",

        # This buffer is applied around the bounds polygon, to expand the 
        # included area.
        "buffer":0.1,

        # Not currently used. May one day define which searvey data sources
        # to pull data from.
        "source_list":["coops"]
    },

    # This section describes which plot types will be included in the 
    # dashboard, and therefore which data variables will be gathered.
    "plot_types":{
        # The parameters must each have value `true` or `false` (without quotes).
        "water_level":true,
        "pressure":true,
        "wind":true
    },

    # This section describes which model data to extract and  
    # include in the dashboard.
    "forecast_type":{
        # Whether to include nowcast data (`true` or `false`, without quotes).
        "nowcast":true,
        # Whether to include all forecast initializations that fall within 
        # the event time window. Must be `true` or `false`, without quotes.
        # If `false`, inidividual initiaization times can be given for
        # each model below.
        "all_forecasts":false
    },

    # This section describes which models to gather data for.
    # Options are dictated by what is possible with `seanode`.
    "models":{
        # Each model has its own section.
        "stofs_2d_glo":{
            # Define list of forecast initializations to gather data for.
            # Only used if `all_forecasts`, above, is false.
            "forecast_init_list":["2025-03-03T12:00:00"],

            # The variables to gather for each plot type in the 
            # `plot_types` section above. Each variable in the list
            # is passed to `seanode`.
            "water_level_var_list":["cwl_bias_corrected", "cwl_raw"],
            "pressure_var_list":["ps"],
            "wind_var_list":["u10", "v10"]
        },
        "stofs_3d_atl":{
            "forecast_init_list":["2025-03-03T12:00:00"],
            "water_level_var_list":["cwl"],
            "pressure_var_list":["ps"],
            "wind_var_list":["u10", "v10"]
        }
    },

    # This section defines some options for the data output.
    "output":{
        # The datum to convert water level variables to.
        "output_datum":"NAVD",
        # The directory within which to save the model and 
        # observation data. The value is appended to the 
        # application's top level directory. 
        # If `null` is given (without quotes), the default is 
        # constructed in the form
        #     data/<name>_<year>
        # e.g.,
        #     data/helene_2024
        "output_dir":"data/tests/test_2025"
    },

    # Not currently used. Eventually will determine when and how often
    # data update jobs run. 
    "updates":{
        "frequency_hours":null,
        "update_start":null,
        "update_end":null,
        "overwrite":false
    }
}
